{% import common_file|default("default_c_binding_common.j2") as common -%}
{%- block copyright_boilerplate -%}{% endblock -%}
/* generated by rubigen, do not edit. */

{% block includes -%}
#include "{{ rel_outpath('header') }}"
{%- endblock %}

{% block impl -%}
void {{ ns }}_load_functions({{ ns }}_functions *f, PFN_rbg_get_sym get_sym, void *user_arg)
{
{%- block impl_body %}
#if defined(__GNUC__) || defined(__clang__)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpedantic"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable: 4055)
#endif
{%- for function in env.functions %}
	f->{{ common.structfunc(function) }} = ({{ common.funcptr_type(function, ns) }})get_sym(user_arg, "{{ function.decl.name }}");
{%- endfor %}
#if defined(__GNUC__) || defined(__clang__)
#pragma GCC diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif
{%- endblock %}
}
{%- endblock %}

