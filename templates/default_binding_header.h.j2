#pragma once
/* generated by rubigen, do not edit.
 *
 * parameters:
 *  defines: {% if pp_definitions is not none %}{{ pp_definitions|join(', ') }}{% else %}none{% endif %}
 *  force includes: {% if force_includes is not none %}{{ force_includes|join(', ') }}{% else %}none{% endif %}
 */

#include "{{ input_file_basename }}"

/* typedefs */
{%- for function in env.functions %}
{{ c_from_typedef(typedef_from_decl(function.decl, 'PFN_' + function.decl.name)) }};
{%- endfor %}

/* functions struct */
typedef struct {{ ns }}_functions_t
{
{%- for function in env.functions %}
	{{ 'PFN_' + function.decl.name }} {{ function.decl.name }};
{%- endfor %}
} {{ ns }}_functions;

typedef struct rbg_library_t rbg_library;
typedef void* (*PFN_rbg_get_sym)(rbg_library *lib, const char *name);
void {{ ns }}_load_funcs({{ ns }}_functions *f, PFN_rbg_get_sym get_sym, rbg_library *lib);

